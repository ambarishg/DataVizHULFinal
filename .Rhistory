"CAPTURED_WINDOW",
"UPDATE_STAMP"), sep = "\\|")
rm(SoftGenTransactions_dump)
AllTransactions =  rbind(BusyTransactions,EasySOLTransactions,MargTransactions,
RetailExPerTransactions,SoftGenTransactions)
ProductMaster = read.csv(file="../input/ProductMaster404b8b3.csv",stringsAsFactors = FALSE)
ProductMasterDistinct = ProductMaster %>% distinct()
AllItems = AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "NULL") %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
group_by(SUBCATEGORY_DESC,COMPANY_CODE) %>%
tally() %>%
arrange(desc(n))
AllItems %>%
ungroup() %>%
head(10) %>%
mutate(ProductCodeDesc = paste0(SUBCATEGORY_DESC)) %>%
mutate(ProductCodeDesc = reorder(ProductCodeDesc,n))  %>%
ggplot(aes(x = ProductCodeDesc,y = n)) +
geom_bar(stat='identity',colour="white", fill =fillColor2) +
geom_text(aes(x = ProductCodeDesc, y = 1, label = paste0("(",n,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'ProductCodeDesc', y = 'Count of SubCategories Sold',
title = 'Count of SubCategories Sold and ProductCode AND product Description') +
coord_flip() +
theme_bw()
AllItems_TopProduct_1_BILLNO =
AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(COMPANY_CODE == "HUL") %>%
filter(SUBCATEGORY_DESC != "NA") %>%
filter(SUBCATEGORY_DESC != "OTHERS") %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
filter(SUBCATEGORY_DESC == "READY MASALA") %>%
select(BILLNO) %>%
distinct()
AllItems = AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(COMPANY_CODE == "HUL") %>%
group_by(SUBCATEGORY_DESC) %>%
tally() %>%
arrange(desc(n))
AllItemsTop = AllItems %>%
ungroup() %>%
head(10) %>%
mutate(ProductCodeDesc = SUBCATEGORY_DESC) %>%
mutate(ProductCodeDesc = reorder(ProductCodeDesc,n))
AllItemsTop %>%
ggplot(aes(x = ProductCodeDesc,y = n)) +
geom_bar(stat='identity',colour="white", fill =fillColor) +
geom_text(aes(x = ProductCodeDesc, y = 1, label = paste0("(",n,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'ProductCodeDesc', y = 'Count of SubCategories Sold',
title = 'Count of SubCategories Sold and ProductCode AND product Description') +
coord_flip() +
theme_bw()
AllItems_TopProduct_1_BILLNO =
AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
filter(SUBCATEGORY_DESC == "READY MASALA") %>%
select(BILLNO) %>%
distinct()
AllItems_WithTopProduct_1 = AllTransactions %>%
filter(BILLNO %in% AllItems_TopProduct_1_BILLNO$BILLNO )
#Get all Items which are Sold With TopProduct_1
AllItems_WithTopProduct_1Desc = AllItems_WithTopProduct_1 %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
group_by(SUBCATEGORY_DESC) %>%
tally() %>%
arrange(desc(n))
AllItems_WithTopProduct_1Desc %>%
ungroup() %>%
filter(SUBCATEGORY_DESC != "OTHERS") %>%
head(10) %>%
mutate(ProductCodeDesc = paste0(SUBCATEGORY_DESC)) %>%
mutate(ProductCodeDesc = reorder(ProductCodeDesc,n))  %>%
ggplot(aes(x = ProductCodeDesc,y = n)) +
geom_bar(stat='identity',colour="white", fill =fillColor) +
geom_text(aes(x = ProductCodeDesc, y = 1, label = paste0("(",n,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'ProductCodeDesc', y = 'Count of Items Sold',
title = 'Count of SubCategory Sold and ProductCode AND product Description') +
coord_flip() +
theme_bw()
AllItems_TopProduct_1_BILLNO =
AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "NULL") %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
filter(SUBCATEGORY_DESC == "READY MASALA") %>%
select(BILLNO) %>%
distinct()
AllItems_WithTopProduct_1 = AllTransactions %>%
filter(BILLNO %in% AllItems_TopProduct_1_BILLNO$BILLNO )
#Get all Items which are Sold With TopProduct_1
AllItems_WithTopProduct_1Desc = AllItems_WithTopProduct_1 %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
group_by(SUBCATEGORY_DESC) %>%
tally() %>%
arrange(desc(n))
AllItems_WithTopProduct_1Desc %>%
ungroup() %>%
filter(SUBCATEGORY_DESC != "NULL") %>%
filter(SUBCATEGORY_DESC != "OTHERS") %>%
head(10) %>%
mutate(ProductCodeDesc = paste0(SUBCATEGORY_DESC)) %>%
mutate(ProductCodeDesc = reorder(ProductCodeDesc,n))  %>%
ggplot(aes(x = ProductCodeDesc,y = n)) +
geom_bar(stat='identity',colour="white", fill =fillColor) +
geom_text(aes(x = ProductCodeDesc, y = 1, label = paste0("(",n,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'ProductCodeDesc', y = 'Count of Items Sold',
title = 'Count of SubCategory Sold and ProductCode AND product Description') +
coord_flip() +
theme_bw()
AllItems_TopProduct_1_BILLNO =
AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "NA") %>%
AllItems_TopProduct_1_BILLNO =
AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "NA") %>%
filter(SUBCATEGORY_DESC != "OTHERS") %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
filter(SUBCATEGORY_DESC == "READY MASALA") %>%
select(BILLNO) %>%
distinct()
AllItems_TopProduct_1_BILLNO =
AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "NA") %>%
filter(SUBCATEGORY_DESC != "OTHERS") %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
filter(SUBCATEGORY_DESC == "READY MASALA") %>%
select(BILLNO) %>%
distinct()
AllItems_TopProduct_1_BILLNO =
AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "NA") %>%
filter(SUBCATEGORY_DESC != "OTHERS") %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
filter(SUBCATEGORY_DESC == "READY MASALA") %>%
select(BILLNO) %>%
distinct()
AllItems_WithTopProduct_1 = AllTransactions %>%
filter(BILLNO %in% AllItems_TopProduct_1_BILLNO$BILLNO )
#Get all Items which are Sold With TopProduct_1
AllItems_WithTopProduct_1Desc = AllItems_WithTopProduct_1 %>%
left_join(ProductMasterDistinct) %>%
filter(COMPANY_CODE == "HUL") %>%
filter(SUBCATEGORY_DESC != "NA") %>%
filter(SUBCATEGORY_DESC != "OTHERS") %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
group_by(SUBCATEGORY_DESC) %>%
tally() %>%
arrange(desc(n))
AllItems_WithTopProduct_1Desc %>%
ungroup() %>%
head(10) %>%
mutate(ProductCodeDesc = paste0(SUBCATEGORY_DESC)) %>%
mutate(ProductCodeDesc = reorder(ProductCodeDesc,n))  %>%
ggplot(aes(x = ProductCodeDesc,y = n)) +
geom_bar(stat='identity',colour="white", fill =fillColor) +
geom_text(aes(x = ProductCodeDesc, y = 1, label = paste0("(",n,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'ProductCodeDesc', y = 'Count of Items Sold',
title = 'Count of Items Sold and ProductCode AND product Description') +
coord_flip() +
theme_bw()
AllItems_TopProduct_1_BILLNO =
AllTransactions %>%
left_join(ProductMasterDistinct) %>%
filter(SUBCATEGORY_DESC != "NA") %>%
filter(SUBCATEGORY_DESC != "OTHERS") %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
filter(SUBCATEGORY_DESC == "READY MASALA") %>%
select(BILLNO) %>%
distinct()
AllItems_WithTopProduct_1 = AllTransactions %>%
filter(BILLNO %in% AllItems_TopProduct_1_BILLNO$BILLNO )
#Get all Items which are Sold With TopProduct_1
AllItems_WithTopProduct_1Desc = AllItems_WithTopProduct_1 %>%
left_join(ProductMasterDistinct) %>%
filter(COMPANY_CODE == "HUL") %>%
filter(SUBCATEGORY_DESC != "NA") %>%
filter(SUBCATEGORY_DESC != "OTHERS") %>%
filter(SUBCATEGORY_DESC != "Unknown") %>%
group_by(SUBCATEGORY_DESC) %>%
tally() %>%
arrange(desc(n))
AllItems_WithTopProduct_1Desc
AllItems_WithTopProduct_1Desc %>%
ungroup() %>%
head(10) %>%
mutate(ProductCodeDesc = paste0(SUBCATEGORY_DESC)) %>%
mutate(ProductCodeDesc = reorder(ProductCodeDesc,n))  %>%
ggplot(aes(x = ProductCodeDesc,y = n)) +
geom_bar(stat='identity',colour="white", fill =fillColor) +
geom_text(aes(x = ProductCodeDesc, y = 1, label = paste0("(",n,")",sep="")),
hjust=0, vjust=.5, size = 4, colour = 'black',
fontface = 'bold') +
labs(x = 'ProductCodeDesc', y = 'Count of Items Sold',
title = 'Count of Items Sold and ProductCode AND product Description') +
coord_flip() +
theme_bw()
shiny::runApp('ShinyHUL')
runApp('ShinyHUL')
library(tidyverse)
library(data.table)
library(lubridate)
ProductMaster = read.csv(file="/input/ProductMaster404b8b3.csv",stringsAsFactors = FALSE)
ProductMasterDistinct = ProductMaster %>% distinct()
write.csv(ProductMasterDistinct, file = "output/Products.csv",row.names=FALSE)
ProductMasterDistinct2 = fread("output/Products.csv")
class(ProductMasterDistinct2)
ProductMasterDistinct2 = as.data.frame(ProductMasterDistinct2)
class(ProductMasterDistinct2)
ProductMaster = read.csv(file="input/ProductMaster404b8b3.csv",stringsAsFactors = FALSE)
ProductMasterDistinct = ProductMaster %>% distinct()
write.csv(ProductMasterDistinct, file = "output/Products.csv",row.names=FALSE)
ProductMasterDistinct2 = fread("output/Products.csv")
class(ProductMasterDistinct2)
ProductMasterDistinct2 = as.data.frame(ProductMasterDistinct2)
class(ProductMasterDistinct2)
write.csv(ProductMasterDistinct, file = "output/Products.csv",row.names=FALSE)
ProductMasterDistinct2 = fread("output/Products.csv")
class(ProductMasterDistinct2)
ProductMasterDistinct2 = as.data.frame(ProductMasterDistinct2)
class(ProductMasterDistinct2)
View(ProductMaster)
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
library(tidyverse)
library(lubridate)
library(arules)
library(forecast)
rm(list=ls())
fillColor = "#FFA07A"
fillColor2 = "#F1C40F"
BusyTransactions_dump <- tibble(text = read_lines("input/BUSY7246fb6.csv", skip = 1))
BusyTransactions <- BusyTransactions_dump %>%
separate(text, into = c("POS_Application_Name",
"STOREID",
"MACID",
"BILLNO",
"BARCODE",
"GUID",
"CREATED_STAMP",
"CAPTURED_WINDOW",
"UPDATE_STAMP"), sep = "\\|")
rm(BusyTransactions_dump)
EasySOLTransactions_dump <- tibble(text = read_lines("input/EASYSOL326dc49.csv", skip = 1))
EasySOLTransactions <- EasySOLTransactions_dump %>%
separate(text, into = c("POS_Application_Name",
"STOREID",
"MACID",
"BILLNO",
"BARCODE",
"GUID",
"CREATED_STAMP",
"CAPTURED_WINDOW",
"UPDATE_STAMP"), sep = "\\|")
rm(EasySOLTransactions_dump)
MargTransactions_dump <- tibble(text = read_lines("input/MARGfc72cd7.csv", skip = 1))
#POS_Application_Name|STOREID|MACID|BILLNO|BARCODE|GUID|CREATED_STAMP|CAPTURED_WINDOW|UPDATE_STAMP
MargTransactions <- MargTransactions_dump %>%
separate(text, into = c("POS_Application_Name",
"STOREID",
"MACID",
"BILLNO",
"BARCODE",
"GUID",
"CREATED_STAMP",
"CAPTURED_WINDOW",
"UPDATE_STAMP"), sep = "\\|")
rm(MargTransactions_dump)
RetailExPerTransactions_dump <- tibble(text = read_lines("input/RETAIL_EXPERe490dde.csv", skip = 1))
#POS_Application_Name|STOREID|MACID|BILLNO|BARCODE|GUID|CREATED_STAMP|CAPTURED_WINDOW|UPDATE_STAMP
RetailExPerTransactions <- RetailExPerTransactions_dump %>%
separate(text, into = c("POS_Application_Name",
"STOREID",
"MACID",
"BILLNO",
"BARCODE",
"GUID",
"CREATED_STAMP",
"CAPTURED_WINDOW",
"UPDATE_STAMP"), sep = "\\|")
rm(RetailExPerTransactions_dump)
SoftGenTransactions_dump <- tibble(text = read_lines("input/SOFT_GENd6661f5.csv", skip = 1))
#POS_Application_Name|STOREID|MACID|BILLNO|BARCODE|GUID|CREATED_STAMP|CAPTURED_WINDOW|UPDATE_STAMP
SoftGenTransactions <- SoftGenTransactions_dump %>%
separate(text, into = c("POS_Application_Name",
"STOREID",
"MACID",
"BILLNO",
"BARCODE",
"GUID",
"CREATED_STAMP",
"CAPTURED_WINDOW",
"UPDATE_STAMP"), sep = "\\|")
rm(SoftGenTransactions_dump)
AllTransactions =  rbind(BusyTransactions,EasySOLTransactions,MargTransactions,
RetailExPerTransactions,SoftGenTransactions)
###################################################################################################
ProductMaster = read.csv(file="input/ProductMaster404b8b3.csv",stringsAsFactors = FALSE)
ProductMasterDistinct = ProductMaster %>% distinct()
View(ProductMaster)
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
ProductDetails <- eventReactive(input$goProduct,{
returnedDataSet = ProductMasterDistinct
if(trimws(input$BasePackDesc)  != "" )
{
returnedDataSet = returnedDataSet %>%
filter(str_detect(BASEPACK_DESC,input$BasePackDesc))
}
else if (trimws(input$SubCategoryDesc)  != "" )
{
returnedDataSet = returnedDataSet %>%
filter(str_detect(SUBCATEGORY_DESC,input$SubCategoryDesc))
}
else if (trimws(input$BrandCategoryDesc)  != "" )
{
returnedDataSet = returnedDataSet %>%
filter(str_detect(BRAND_DESC,input$BrandCategoryDesc))
}
else
{
returnedDataSet = NULL
}
return(returnedDataSet)
})
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
shiny::runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
ProductDetails <- eventReactive(input$goProduct,{
returnedDataSet = ProductMasterDistinct
if(trimws(input$BasePackDesc)  != "" )
{
returnedDataSet = returnedDataSet %>%
filter(str_detect(BASEPACK_DESC,input$BasePackDesc))
}
else if (trimws(input$SubCategoryDesc)  != "" )
{
returnedDataSet = returnedDataSet %>%
filter(str_detect(SUBCATEGORY_DESC,input$SubCategoryDesc))
}
else if (trimws(input$BrandCategoryDesc)  != "" )
{
returnedDataSet = returnedDataSet %>%
filter(str_detect(BRAND_DESC,input$BrandCategoryDesc))
}
else
{
returnedDataSet = NULL
}
return(returnedDataSet)
})
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
shiny::runApp('D:/Applications/ShinyAppsRStudio/shiny-examples/051-movie-explorer')
install.packages("ggvis")
runApp('D:/Applications/ShinyAppsRStudio/shiny-examples/051-movie-explorer')
install.packages("dbplyr")
runApp('D:/Applications/ShinyAppsRStudio/shiny-examples/051-movie-explorer')
runApp('D:/Applications/ShinyAppsRStudio/shiny-examples/086-bus-dashboard')
shiny::runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
shiny::runApp('ShinyHUL')
shiny::runApp('D:/Applications/ShinyAppsRStudio/shiny-examples/032-client-data-and-query-string')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
tabPanel("Inventory Tracking",
sidebarLayout(
sidebarPanel(
textInput(inputId = "BarCodeInv",
label = "Bar Code:",
value = "8901030341663",
width = "500px"),
textInput(inputId = "StoreIDInv",
label = "Store ID:",
value = "All",
width = "500px"),
dateRangeInput(inputId = "DateRange",
label = "Date Range",
start ="2017-01-01",
end = "2017-01-01"),
actionButton("go5", "Inventory Tracking Details","primary"),
tags$hr(),
tags$div("Bar Code Highest Sales = 8901030341663"),
tags$hr(),
tags$div("Bar Code 2nd Highest Sales = 8901030534898"),
tags$hr(),
tags$div("Store ID Highest Sales = DEL0000000005")
),
mainPanel(DT::dataTableOutput("InventoryDetailsTable"))
),style='width: 800px; height: 800px'
)
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
shiny::runApp('ShinyHUL')
shiny::runApp('ShinyHUL')
runApp('ShinyHUL')
runApp('ShinyHUL')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='ambarishg',
token='34A5B767DA71C20BDF972CB0B674FF7C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='ambarishg',
token='34A5B767DA71C20BDF972CB0B674FF7C',
secret='T8l0UpXdDkIy002sMJPfp07DTZwffHuoDvP9KHGr')
shiny::runApp('D:/Applications/HackerEarth/HUL/DataVizHULShiny/ShinyHUL')
runApp('D:/Applications/HackerEarth/HUL/DataVizHULShiny/ShinyHUL')
rsconnect::setAccountInfo(name='ambarishg',
token='34A5B767DA71C20BDF972CB0B674FF7C',
secret='T8l0UpXdDkIy002sMJPfp07DTZwffHuoDvP9KHGr')
rsconnect::deployApp('D:/Applications/HackerEarth/HUL/DataVizHULShiny')
shiny::runApp('ShinyHUL')
